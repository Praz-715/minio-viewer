<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bucket - <%= bucketName %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">    <style>
        .modal-body img, .pdf-container {
            max-width: 100%;
            height: auto;
        }
        .pdf-container {
            position: relative;
            height: 500px; /* Adjust as needed */
        }
        .pdf-container canvas {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="my-4">Objects in Bucket: <%= bucketName %></h1>
        <ul class="list-group">
            <% objects.forEach(object => { %>
                <li class="list-group-item">
                    <% if (object.name.endsWith('.pdf')) { %>
                        <a href="#" data-bs-toggle="modal" data-bs-target="#previewModal" data-file-url="<%= object.presignedUrl %>" data-file-type="pdf"><%= object.name %> (PDF)</a>
                    <% } else if (object.name.endsWith('.png') || object.name.endsWith('.jpg') || object.name.endsWith('.jpeg')) { %>
                        <a href="#" data-bs-toggle="modal" data-bs-target="#previewModal" data-file-url="<%= object.presignedUrl %>" data-file-type="image"><%= object.name %> (Image)</a>
                    <% } else { %>
                        <a href="<%= object.presignedUrl %>" download><%= object.name %> (File)</a>
                    <% } %>
                </li>
            <% }); %>
        </ul>
    </div>

    <!-- Preview Modal -->
    <div class="modal modal-xl fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="previewModalLabel">Preview</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="pdfContainer" class="pdf-container" style="display: none;">
                        <!-- <canvas id="pdfCanvas"></canvas> -->
                    </div>
                    <div id="imageContainer" style="display: none;">
                        <img src="" alt="Image Preview">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>
    <script>
        // Set the src of the modal content based on file type
        var previewModal = document.getElementById('previewModal');
        previewModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var fileUrl = button.getAttribute('data-file-url'); // Extract info from data-* attributes
            var fileType = button.getAttribute('data-file-type'); // Extract file type
            var pdfContainer = document.getElementById('pdfContainer');
            var imageContainer = document.getElementById('imageContainer');
            var pdfCanvasContainer = document.getElementById('pdfContainer');
            var img = imageContainer.querySelector('img');

            if (fileType === 'pdf') {
                pdfContainer.style.display = 'block';
                imageContainer.style.display = 'none';
                pdfCanvasContainer.innerHTML = ''; // Clear previous content

                // Load and render the PDF
                pdfjsLib.getDocument(fileUrl).promise.then(pdf => {
                    const numPages = pdf.numPages;
                    for (let pageNum = 1; pageNum <= numPages; pageNum++) {
                        pdf.getPage(pageNum).then(page => {
                            var scale = 1.5;
                            var viewport = page.getViewport({ scale });
                            var canvas = document.createElement('canvas');
                            var context = canvas.getContext('2d');
                            canvas.height = viewport.height;
                            canvas.width = viewport.width;
                            var renderContext = {
                                canvasContext: context,
                                viewport: viewport
                            };
                            pdfCanvasContainer.appendChild(canvas);
                            page.render(renderContext);
                        }).catch(err => {
                            console.error('Error rendering page:', err);
                        });
                    }
                }).catch(err => {
                    console.error('Error loading PDF:', err);
                });
            } else if (fileType === 'image') {
                pdfContainer.style.display = 'none';
                imageContainer.style.display = 'block';
                img.src = fileUrl;
            }
        });
    </script>
</body>
</html>
